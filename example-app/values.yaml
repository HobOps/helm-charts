templates:
  defaults: &defaults
    replicaCount: 1
    envFrom:
    - secretRef:
        name: example-secret
    - configMapRef:
        name: example-config
    env:
    - name: TEST_VAR
      value: "test_var"

### ConfigMaps
example-config:
  kind: ConfigMap
  fullnameOverride: example-config
  data: {}

### Secrets
example-secret:
  kind: Secret
  fullnameOverride: example-secret
  stringData:
    FOO: bar
#  data:
#    FOO: YmFy

### Backends
example-backend:
  <<: *defaults
  kind: Deployment
  fullnameOverride: example-backend
  # TODO: remove redundant labels
  selectorLabels:
    app: "{{ .Chart.Name }}"
  image:
    repository: nginx
    tag: "latest"
  command:
  - bash
  - -c
  args:
  - nginx -g "daemon off;"
  readinessProbe:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 2
    failureThreshold: 3
    timeoutSeconds: 2
    initialDelaySeconds: 20
  service:
    ports:
    - name: nginx
      port: 80
      protocol: TCP

### Workers
example-worker:
  <<: *defaults
  kind: Deployment
  fullnameOverride: example-worker
  # TODO: remove redundant labels
  selectorLabels:
    app: "{{ .Chart.Name }}"
  image:
    repository: nginx
    tag: "latest"
  command:
  - bash
  - -c
  args:
  - nginx -g "daemon off;"

### Frontends
example-frontend:
  <<: *defaults
  kind: Deployment
  fullnameOverride: example-frontend
  # TODO: remove redundant labels
  selectorLabels:
    app: "{{ .Chart.Name }}"
  image:
    repository: nginx
    tag: "latest"
  command:
  - bash
  - -c
  args:
  - nginx -g "daemon off;"
  readinessProbe:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 2
    failureThreshold: 3
    timeoutSeconds: 2
    initialDelaySeconds: 20
  service:
    ports:
    - name: nginx
      port: 80
      protocol: TCP

### Ingress
example-ingress:
  kind: Ingress
  fullnameOverride: example
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 600s
    nginx.ingress.kubernetes.io/proxy-read-timeout: 600s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 600s
  tls:
  - hosts:
    - backend.example.com
    - frontend.example.com
    secretName: "{{ .Chart.Name }}-tls"
  rules:
  - host: backend.example.com
    http:
      paths:
      - backend:
          service:
            name: example-backend
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  - host: frontend.example.com
    http:
      paths:
      - backend:
          service:
            name: example-frontend
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
